@inherits TestContext

@using Moq
@using ToolsApp.Components.Shared 

@code {

  [Fact]
  public void ActionDataListComponentActionButtonClicked()
  {
    // Arrange
    List<string> colors = new() {
      "red", "green", "blue"
    };

    var emptyMessage = "No colors";

    var actionButtonLabel = "X";

    var itemActionMock = Mock.Of<Action<string>>();

    var cut = Render(
      @<ActionDataList Items="@colors" EmptyMessage="@emptyMessage"
        ActionButtonLabel="@actionButtonLabel" OnItemAction="@itemActionMock">
        <h3>Colors</h3>
      </ActionDataList>
    );

    // Act

    var buttonElement = cut.Find("li:nth-child(2) button");
    buttonElement.Click();

    // Assert

    Mock.Get(itemActionMock).Verify(mock => mock("green"), Times.Once());
  }

}
