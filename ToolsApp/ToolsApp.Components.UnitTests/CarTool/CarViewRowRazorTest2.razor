@inherits TestContext

@using Moq

@using ToolsApp.Components.CarTool
@using ToolsApp.Models.Cars;

@code {

  Car car = new(1, "Ford", "Fusion Hybrid", 2020, "blue", 45000.0M);

  [Fact]
  public void CarViewRowEditButtonOutput()
  {
    // Arrange
    var editCarActionMock = Mock.Of<Action<int>>();

    // Act
    var cut = Render(@<CarViewRow Car="@car" OnEditCar="editCarActionMock" />);

    var editCarButtonElement = cut.Find("td:nth-child(7) button:first-child");

    editCarButtonElement.Click();

    // Assert
    Mock.Get(editCarActionMock).Verify(mock => mock(1), Times.Once());
  }

  [Fact]
  public void CarViewRowDeleteButtonOutput()
  {
    // Arrange
    var deleteCarActionMock = Mock.Of<Action<int>>();

    // Act
    var cut = Render(@<CarViewRow Car="@car" OnDeleteCar="deleteCarActionMock" />);

    var deleteCarButtonElement = cut.Find("td:nth-child(7) button:last-child");

    deleteCarButtonElement.Click();

    // Assert
    Mock.Get(deleteCarActionMock).Verify(mock => mock(1), Times.Once());
  }


}
